[build-system]
requires = ["flit-core >=3.2,<4"]
build-backend = "flit_core.buildapi"

[project]
name = "asyncache"
version = "0.3.1"
description = "Helpers to use cachetools with async code."
authors = [{ name = "hephex", email = "figus.federico@gmail.com" }]
license = "MIT"
readme = "README.rst"
requires-python = ">=3.9"
dependencies = ["cachetools>=5.2.0"]

[dependency-groups]
dev = [
    "ruff",
    "mypy",
    "pytest",
    "Sphinx",
    "sphinx-rtd-theme",
    "types-cachetools",
]

[tool.ruff.lint]
select = ["E", "F", "W", "B", "SIM", "I"]
ignore = [
    # lambda expressions
    "E731",
    # ambiguous variable name
    "E741",
    # Do not perform function calls in argument defaults
    "B008",
    # Within an except clause, raise exceptions with `raise ... from err` or `raise ... from None`
    "B904",
    # `zip()` without an explicit `strict=` parameter
    "B905",
    # Use `contextlib.suppress(asyncio.CancelledError)` instead of try-except-pass
    "SIM105",
    # Use ternary operator `{contents}` instead of if-else-block
    "SIM108",
    # `itertools.batched()` without an explicit `strict` parameter
    "B911",
]

